//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OPS.BehdadService {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class UnableToGetClientCertificateInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class accountControlCreateModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string accountNumberField;
        
        private string controlTypeField;
        
        private string identifierTypeField;
        
        private string toDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("accountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string controlType {
            get {
                return this.controlTypeField;
            }
            set {
                this.controlTypeField = value;
                this.RaisePropertyChanged("controlType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string identifierType {
            get {
                return this.identifierTypeField;
            }
            set {
                this.identifierTypeField = value;
                this.RaisePropertyChanged("identifierType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string toDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
                this.RaisePropertyChanged("toDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class credential : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string passwordField;
        
        private string usernameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("username");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class ExpiredOrNotValidCertificateException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidIdentifierTypeException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidIdentifierControlTypeException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidDateException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class PasswordIsNotStrongException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class UnableToAuthenticateException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidCredentialException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class PasswordShouldBeChangeException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidCertificateException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class UserTemporarilySuspendedException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class UnableToChangePasswordException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class PageSizeIsTooMuchException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class TransactionDoesNotBelongToAccount : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidPageNumberException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidTransactionTypeException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidPageSizeException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class UnableToGetTransactionsException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class TooMuchAccountsException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="com.misc.bis.behdad.service", ConfigurationName="BehdadService.AccountService")]
    public interface AccountService {
        
        // CODEGEN: Parameter 'credential' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToGetClientCertificateInfo), Action="", Name="UnableToGetClientCertificateInfo")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.ExpiredOrNotValidCertificateException), Action="", Name="ExpiredOrNotValidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidIdentifierTypeException), Action="", Name="InvalidIdentifierTypeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidIdentifierControlTypeException), Action="", Name="InvalidIdentifierControlTypeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidDateException), Action="", Name="InvalidDateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordShouldBeChangeException), Action="", Name="PasswordShouldBeChangeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCertificateException), Action="", Name="InvalidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        OPS.BehdadService.setAccountControlTypeResponse setAccountControlType(OPS.BehdadService.setAccountControlType request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<OPS.BehdadService.setAccountControlTypeResponse> setAccountControlTypeAsync(OPS.BehdadService.setAccountControlType request);
        
        // CODEGEN: Parameter 'changePasswordRequest' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToGetClientCertificateInfo), Action="", Name="UnableToGetClientCertificateInfo")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.ExpiredOrNotValidCertificateException), Action="", Name="ExpiredOrNotValidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToChangePasswordException), Action="", Name="UnableToChangePasswordException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordShouldBeChangeException), Action="", Name="PasswordShouldBeChangeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCertificateException), Action="", Name="InvalidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        OPS.BehdadService.changePasswordResponse changePassword(OPS.BehdadService.changePassword request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<OPS.BehdadService.changePasswordResponse> changePasswordAsync(OPS.BehdadService.changePassword request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToGetClientCertificateInfo), Action="", Name="UnableToGetClientCertificateInfo")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.ExpiredOrNotValidCertificateException), Action="", Name="ExpiredOrNotValidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordShouldBeChangeException), Action="", Name="PasswordShouldBeChangeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCertificateException), Action="", Name="InvalidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        OPS.BehdadService.getAccountBalanceResponse getAccountBalance(OPS.BehdadService.getAccountBalance request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<OPS.BehdadService.getAccountBalanceResponse> getAccountBalanceAsync(OPS.BehdadService.getAccountBalance request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PageSizeIsTooMuchException), Action="", Name="PageSizeIsTooMuchException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordShouldBeChangeException), Action="", Name="PasswordShouldBeChangeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToGetClientCertificateInfo), Action="", Name="UnableToGetClientCertificateInfo")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.ExpiredOrNotValidCertificateException), Action="", Name="ExpiredOrNotValidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.TransactionDoesNotBelongToAccount), Action="", Name="TransactionDoesNotBelongToAccount")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidPageNumberException), Action="", Name="InvalidPageNumberException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidTransactionTypeException), Action="", Name="InvalidTransactionTypeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidPageSizeException), Action="", Name="InvalidPageSizeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCertificateException), Action="", Name="InvalidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        OPS.BehdadService.getPagedDestinationSideTransactionsResponse getPagedDestinationSideTransactions(OPS.BehdadService.getPagedDestinationSideTransactions request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<OPS.BehdadService.getPagedDestinationSideTransactionsResponse> getPagedDestinationSideTransactionsAsync(OPS.BehdadService.getPagedDestinationSideTransactions request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PageSizeIsTooMuchException), Action="", Name="PageSizeIsTooMuchException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordShouldBeChangeException), Action="", Name="PasswordShouldBeChangeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToGetClientCertificateInfo), Action="", Name="UnableToGetClientCertificateInfo")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.ExpiredOrNotValidCertificateException), Action="", Name="ExpiredOrNotValidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidDateException), Action="", Name="InvalidDateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidPageNumberException), Action="", Name="InvalidPageNumberException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidPageSizeException), Action="", Name="InvalidPageSizeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToGetTransactionsException), Action="", Name="UnableToGetTransactionsException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCertificateException), Action="", Name="InvalidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        OPS.BehdadService.getBankTransactionsDetailsResponse getBankTransactionsDetails(OPS.BehdadService.getBankTransactionsDetails request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<OPS.BehdadService.getBankTransactionsDetailsResponse> getBankTransactionsDetailsAsync(OPS.BehdadService.getBankTransactionsDetails request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PageSizeIsTooMuchException), Action="", Name="PageSizeIsTooMuchException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordShouldBeChangeException), Action="", Name="PasswordShouldBeChangeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToGetClientCertificateInfo), Action="", Name="UnableToGetClientCertificateInfo")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.ExpiredOrNotValidCertificateException), Action="", Name="ExpiredOrNotValidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.TransactionDoesNotBelongToAccount), Action="", Name="TransactionDoesNotBelongToAccount")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidPageNumberException), Action="", Name="InvalidPageNumberException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidTransactionTypeException), Action="", Name="InvalidTransactionTypeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidPageSizeException), Action="", Name="InvalidPageSizeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCertificateException), Action="", Name="InvalidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        OPS.BehdadService.getPagedSourceSideTransactionsResponse getPagedSourceSideTransactions(OPS.BehdadService.getPagedSourceSideTransactions request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<OPS.BehdadService.getPagedSourceSideTransactionsResponse> getPagedSourceSideTransactionsAsync(OPS.BehdadService.getPagedSourceSideTransactions request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToGetClientCertificateInfo), Action="", Name="UnableToGetClientCertificateInfo")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.ExpiredOrNotValidCertificateException), Action="", Name="ExpiredOrNotValidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidIdentifierTypeException), Action="", Name="InvalidIdentifierTypeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordShouldBeChangeException), Action="", Name="PasswordShouldBeChangeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCertificateException), Action="", Name="InvalidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        OPS.BehdadService.getAccountControlTypeResponse getAccountControlType(OPS.BehdadService.getAccountControlType request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<OPS.BehdadService.getAccountControlTypeResponse> getAccountControlTypeAsync(OPS.BehdadService.getAccountControlType request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PageSizeIsTooMuchException), Action="", Name="PageSizeIsTooMuchException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordShouldBeChangeException), Action="", Name="PasswordShouldBeChangeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.TooMuchAccountsException), Action="", Name="TooMuchAccountsException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToGetClientCertificateInfo), Action="", Name="UnableToGetClientCertificateInfo")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.ExpiredOrNotValidCertificateException), Action="", Name="ExpiredOrNotValidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidDateException), Action="", Name="InvalidDateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidPageNumberException), Action="", Name="InvalidPageNumberException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidPageSizeException), Action="", Name="InvalidPageSizeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToGetTransactionsException), Action="", Name="UnableToGetTransactionsException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCertificateException), Action="", Name="InvalidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        OPS.BehdadService.getMultipleAccountTransactionsDetailsResponse getMultipleAccountTransactionsDetails(OPS.BehdadService.getMultipleAccountTransactionsDetails request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<OPS.BehdadService.getMultipleAccountTransactionsDetailsResponse> getMultipleAccountTransactionsDetailsAsync(OPS.BehdadService.getMultipleAccountTransactionsDetails request);
        
        // CODEGEN: Parameter 'credential' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToGetClientCertificateInfo), Action="", Name="UnableToGetClientCertificateInfo")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.ExpiredOrNotValidCertificateException), Action="", Name="ExpiredOrNotValidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidIdentifierTypeException), Action="", Name="InvalidIdentifierTypeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordShouldBeChangeException), Action="", Name="PasswordShouldBeChangeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCertificateException), Action="", Name="InvalidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        OPS.BehdadService.clearAccountControlTypeResponse clearAccountControlType(OPS.BehdadService.clearAccountControlType request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<OPS.BehdadService.clearAccountControlTypeResponse> clearAccountControlTypeAsync(OPS.BehdadService.clearAccountControlType request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToGetClientCertificateInfo), Action="", Name="UnableToGetClientCertificateInfo")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.ExpiredOrNotValidCertificateException), Action="", Name="ExpiredOrNotValidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.PasswordShouldBeChangeException), Action="", Name="PasswordShouldBeChangeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.InvalidCertificateException), Action="", Name="InvalidCertificateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(OPS.BehdadService.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        OPS.BehdadService.getAccountNumbersResponse getAccountNumbers(OPS.BehdadService.getAccountNumbers request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<OPS.BehdadService.getAccountNumbersResponse> getAccountNumbersAsync(OPS.BehdadService.getAccountNumbers request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setAccountControlType", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class setAccountControlType {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.accountControlCreateModel createModel;
        
        public setAccountControlType() {
        }
        
        public setAccountControlType(OPS.BehdadService.credential credential, OPS.BehdadService.accountControlCreateModel createModel) {
            this.credential = credential;
            this.createModel = createModel;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setAccountControlTypeResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class setAccountControlTypeResponse {
        
        public setAccountControlTypeResponse() {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class changePasswordRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string newPasswordField;
        
        private string passwordField;
        
        private string usernameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string newPassword {
            get {
                return this.newPasswordField;
            }
            set {
                this.newPasswordField = value;
                this.RaisePropertyChanged("newPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("username");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="changePassword", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class changePassword {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.changePasswordRequest changePasswordRequest;
        
        public changePassword() {
        }
        
        public changePassword(OPS.BehdadService.changePasswordRequest changePasswordRequest) {
            this.changePasswordRequest = changePasswordRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="changePasswordResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class changePasswordResponse {
        
        public changePasswordResponse() {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class accountInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string accountNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("accountNumber");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class balanceInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal creditField;
        
        private bool creditFieldSpecified;
        
        private decimal monetaryField;
        
        private bool monetaryFieldSpecified;
        
        private string reportDateField;
        
        private decimal systemBlockField;
        
        private bool systemBlockFieldSpecified;
        
        private decimal userBlockField;
        
        private bool userBlockFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public decimal credit {
            get {
                return this.creditField;
            }
            set {
                this.creditField = value;
                this.RaisePropertyChanged("credit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creditSpecified {
            get {
                return this.creditFieldSpecified;
            }
            set {
                this.creditFieldSpecified = value;
                this.RaisePropertyChanged("creditSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public decimal monetary {
            get {
                return this.monetaryField;
            }
            set {
                this.monetaryField = value;
                this.RaisePropertyChanged("monetary");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool monetarySpecified {
            get {
                return this.monetaryFieldSpecified;
            }
            set {
                this.monetaryFieldSpecified = value;
                this.RaisePropertyChanged("monetarySpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string reportDate {
            get {
                return this.reportDateField;
            }
            set {
                this.reportDateField = value;
                this.RaisePropertyChanged("reportDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public decimal systemBlock {
            get {
                return this.systemBlockField;
            }
            set {
                this.systemBlockField = value;
                this.RaisePropertyChanged("systemBlock");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool systemBlockSpecified {
            get {
                return this.systemBlockFieldSpecified;
            }
            set {
                this.systemBlockFieldSpecified = value;
                this.RaisePropertyChanged("systemBlockSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public decimal userBlock {
            get {
                return this.userBlockField;
            }
            set {
                this.userBlockField = value;
                this.RaisePropertyChanged("userBlock");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userBlockSpecified {
            get {
                return this.userBlockFieldSpecified;
            }
            set {
                this.userBlockFieldSpecified = value;
                this.RaisePropertyChanged("userBlockSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAccountBalance", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getAccountBalance {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.accountInfo accountInfo;
        
        public getAccountBalance() {
        }
        
        public getAccountBalance(OPS.BehdadService.credential credential, OPS.BehdadService.accountInfo accountInfo) {
            this.credential = credential;
            this.accountInfo = accountInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAccountBalanceResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getAccountBalanceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.balanceInfo @return;
        
        public getAccountBalanceResponse() {
        }
        
        public getAccountBalanceResponse(OPS.BehdadService.balanceInfo @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class sideTransactionsRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string accountNumberField;
        
        private long transactionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("accountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public long transactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
                this.RaisePropertyChanged("transactionId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class paging : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int pageNumberField;
        
        private bool pageNumberFieldSpecified;
        
        private int recordCountField;
        
        private bool recordCountFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int pageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
                this.RaisePropertyChanged("pageNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pageNumberSpecified {
            get {
                return this.pageNumberFieldSpecified;
            }
            set {
                this.pageNumberFieldSpecified = value;
                this.RaisePropertyChanged("pageNumberSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int recordCount {
            get {
                return this.recordCountField;
            }
            set {
                this.recordCountField = value;
                this.RaisePropertyChanged("recordCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool recordCountSpecified {
            get {
                return this.recordCountFieldSpecified;
            }
            set {
                this.recordCountFieldSpecified = value;
                this.RaisePropertyChanged("recordCountSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class pagedData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object[] currentPageDataField;
        
        private int pageNumberField;
        
        private bool pageNumberFieldSpecified;
        
        private int pageSizeField;
        
        private bool pageSizeFieldSpecified;
        
        private long totalCountField;
        
        private bool totalCountFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("currentPageData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=0)]
        public object[] currentPageData {
            get {
                return this.currentPageDataField;
            }
            set {
                this.currentPageDataField = value;
                this.RaisePropertyChanged("currentPageData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int pageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
                this.RaisePropertyChanged("pageNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pageNumberSpecified {
            get {
                return this.pageNumberFieldSpecified;
            }
            set {
                this.pageNumberFieldSpecified = value;
                this.RaisePropertyChanged("pageNumberSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int pageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
                this.RaisePropertyChanged("pageSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pageSizeSpecified {
            get {
                return this.pageSizeFieldSpecified;
            }
            set {
                this.pageSizeFieldSpecified = value;
                this.RaisePropertyChanged("pageSizeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public long totalCount {
            get {
                return this.totalCountField;
            }
            set {
                this.totalCountField = value;
                this.RaisePropertyChanged("totalCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalCountSpecified {
            get {
                return this.totalCountFieldSpecified;
            }
            set {
                this.totalCountFieldSpecified = value;
                this.RaisePropertyChanged("totalCountSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getPagedDestinationSideTransactions", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getPagedDestinationSideTransactions {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.sideTransactionsRequest sideTransactionsRequest;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.paging paging;
        
        public getPagedDestinationSideTransactions() {
        }
        
        public getPagedDestinationSideTransactions(OPS.BehdadService.credential credential, OPS.BehdadService.sideTransactionsRequest sideTransactionsRequest, OPS.BehdadService.paging paging) {
            this.credential = credential;
            this.sideTransactionsRequest = sideTransactionsRequest;
            this.paging = paging;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getPagedDestinationSideTransactionsResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getPagedDestinationSideTransactionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.pagedData @return;
        
        public getPagedDestinationSideTransactionsResponse() {
        }
        
        public getPagedDestinationSideTransactionsResponse(OPS.BehdadService.pagedData @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class accountTransactionFilter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string accountNumberField;
        
        private string fromDateTimeField;
        
        private string paymentIdentifierField;
        
        private string toDateTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("accountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string fromDateTime {
            get {
                return this.fromDateTimeField;
            }
            set {
                this.fromDateTimeField = value;
                this.RaisePropertyChanged("fromDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string paymentIdentifier {
            get {
                return this.paymentIdentifierField;
            }
            set {
                this.paymentIdentifierField = value;
                this.RaisePropertyChanged("paymentIdentifier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string toDateTime {
            get {
                return this.toDateTimeField;
            }
            set {
                this.toDateTimeField = value;
                this.RaisePropertyChanged("toDateTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getBankTransactionsDetails", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getBankTransactionsDetails {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.accountTransactionFilter filter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.paging paging;
        
        public getBankTransactionsDetails() {
        }
        
        public getBankTransactionsDetails(OPS.BehdadService.credential credential, OPS.BehdadService.accountTransactionFilter filter, OPS.BehdadService.paging paging) {
            this.credential = credential;
            this.filter = filter;
            this.paging = paging;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getBankTransactionsDetailsResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getBankTransactionsDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.pagedData @return;
        
        public getBankTransactionsDetailsResponse() {
        }
        
        public getBankTransactionsDetailsResponse(OPS.BehdadService.pagedData @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getPagedSourceSideTransactions", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getPagedSourceSideTransactions {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.sideTransactionsRequest sideTransactionsRequest;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.paging paging;
        
        public getPagedSourceSideTransactions() {
        }
        
        public getPagedSourceSideTransactions(OPS.BehdadService.credential credential, OPS.BehdadService.sideTransactionsRequest sideTransactionsRequest, OPS.BehdadService.paging paging) {
            this.credential = credential;
            this.sideTransactionsRequest = sideTransactionsRequest;
            this.paging = paging;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getPagedSourceSideTransactionsResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getPagedSourceSideTransactionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.pagedData @return;
        
        public getPagedSourceSideTransactionsResponse() {
        }
        
        public getPagedSourceSideTransactionsResponse(OPS.BehdadService.pagedData @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAccountControlType", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getAccountControlType {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.accountInfo accountInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string identifierType;
        
        public getAccountControlType() {
        }
        
        public getAccountControlType(OPS.BehdadService.credential credential, OPS.BehdadService.accountInfo accountInfo, string identifierType) {
            this.credential = credential;
            this.accountInfo = accountInfo;
            this.identifierType = identifierType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAccountControlTypeResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getAccountControlTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
        
        public getAccountControlTypeResponse() {
        }
        
        public getAccountControlTypeResponse(string @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class multipleAccountTransactionFilter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] accountNumbersField;
        
        private string fromDateTimeField;
        
        private string paymentIdentifierField;
        
        private string toDateTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("accountNumbers", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=0)]
        public string[] accountNumbers {
            get {
                return this.accountNumbersField;
            }
            set {
                this.accountNumbersField = value;
                this.RaisePropertyChanged("accountNumbers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string fromDateTime {
            get {
                return this.fromDateTimeField;
            }
            set {
                this.fromDateTimeField = value;
                this.RaisePropertyChanged("fromDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string paymentIdentifier {
            get {
                return this.paymentIdentifierField;
            }
            set {
                this.paymentIdentifierField = value;
                this.RaisePropertyChanged("paymentIdentifier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string toDateTime {
            get {
                return this.toDateTimeField;
            }
            set {
                this.toDateTimeField = value;
                this.RaisePropertyChanged("toDateTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getMultipleAccountTransactionsDetails", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getMultipleAccountTransactionsDetails {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.multipleAccountTransactionFilter filter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.paging paging;
        
        public getMultipleAccountTransactionsDetails() {
        }
        
        public getMultipleAccountTransactionsDetails(OPS.BehdadService.credential credential, OPS.BehdadService.multipleAccountTransactionFilter filter, OPS.BehdadService.paging paging) {
            this.credential = credential;
            this.filter = filter;
            this.paging = paging;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getMultipleAccountTransactionsDetailsResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getMultipleAccountTransactionsDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.pagedData @return;
        
        public getMultipleAccountTransactionsDetailsResponse() {
        }
        
        public getMultipleAccountTransactionsDetailsResponse(OPS.BehdadService.pagedData @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="clearAccountControlType", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class clearAccountControlType {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.accountInfo accountInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string identifierType;
        
        public clearAccountControlType() {
        }
        
        public clearAccountControlType(OPS.BehdadService.credential credential, OPS.BehdadService.accountInfo accountInfo, string identifierType) {
            this.credential = credential;
            this.accountInfo = accountInfo;
            this.identifierType = identifierType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="clearAccountControlTypeResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class clearAccountControlTypeResponse {
        
        public clearAccountControlTypeResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAccountNumbers", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getAccountNumbers {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.credential credential;
        
        public getAccountNumbers() {
        }
        
        public getAccountNumbers(OPS.BehdadService.credential credential) {
            this.credential = credential;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAccountNumbersResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getAccountNumbersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OPS.BehdadService.accountInfo[] @return;
        
        public getAccountNumbersResponse() {
        }
        
        public getAccountNumbersResponse(OPS.BehdadService.accountInfo[] @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AccountServiceChannel : OPS.BehdadService.AccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<OPS.BehdadService.AccountService>, OPS.BehdadService.AccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OPS.BehdadService.setAccountControlTypeResponse OPS.BehdadService.AccountService.setAccountControlType(OPS.BehdadService.setAccountControlType request) {
            return base.Channel.setAccountControlType(request);
        }
        
        public void setAccountControlType(OPS.BehdadService.credential credential, OPS.BehdadService.accountControlCreateModel createModel) {
            OPS.BehdadService.setAccountControlType inValue = new OPS.BehdadService.setAccountControlType();
            inValue.credential = credential;
            inValue.createModel = createModel;
            OPS.BehdadService.setAccountControlTypeResponse retVal = ((OPS.BehdadService.AccountService)(this)).setAccountControlType(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OPS.BehdadService.setAccountControlTypeResponse> OPS.BehdadService.AccountService.setAccountControlTypeAsync(OPS.BehdadService.setAccountControlType request) {
            return base.Channel.setAccountControlTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<OPS.BehdadService.setAccountControlTypeResponse> setAccountControlTypeAsync(OPS.BehdadService.credential credential, OPS.BehdadService.accountControlCreateModel createModel) {
            OPS.BehdadService.setAccountControlType inValue = new OPS.BehdadService.setAccountControlType();
            inValue.credential = credential;
            inValue.createModel = createModel;
            return ((OPS.BehdadService.AccountService)(this)).setAccountControlTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OPS.BehdadService.changePasswordResponse OPS.BehdadService.AccountService.changePassword(OPS.BehdadService.changePassword request) {
            return base.Channel.changePassword(request);
        }
        
        public void changePassword(OPS.BehdadService.changePasswordRequest changePasswordRequest) {
            OPS.BehdadService.changePassword inValue = new OPS.BehdadService.changePassword();
            inValue.changePasswordRequest = changePasswordRequest;
            OPS.BehdadService.changePasswordResponse retVal = ((OPS.BehdadService.AccountService)(this)).changePassword(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OPS.BehdadService.changePasswordResponse> OPS.BehdadService.AccountService.changePasswordAsync(OPS.BehdadService.changePassword request) {
            return base.Channel.changePasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<OPS.BehdadService.changePasswordResponse> changePasswordAsync(OPS.BehdadService.changePasswordRequest changePasswordRequest) {
            OPS.BehdadService.changePassword inValue = new OPS.BehdadService.changePassword();
            inValue.changePasswordRequest = changePasswordRequest;
            return ((OPS.BehdadService.AccountService)(this)).changePasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OPS.BehdadService.getAccountBalanceResponse OPS.BehdadService.AccountService.getAccountBalance(OPS.BehdadService.getAccountBalance request) {
            return base.Channel.getAccountBalance(request);
        }
        
        public OPS.BehdadService.balanceInfo getAccountBalance(OPS.BehdadService.credential credential, OPS.BehdadService.accountInfo accountInfo) {
            OPS.BehdadService.getAccountBalance inValue = new OPS.BehdadService.getAccountBalance();
            inValue.credential = credential;
            inValue.accountInfo = accountInfo;
            OPS.BehdadService.getAccountBalanceResponse retVal = ((OPS.BehdadService.AccountService)(this)).getAccountBalance(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OPS.BehdadService.getAccountBalanceResponse> OPS.BehdadService.AccountService.getAccountBalanceAsync(OPS.BehdadService.getAccountBalance request) {
            return base.Channel.getAccountBalanceAsync(request);
        }
        
        public System.Threading.Tasks.Task<OPS.BehdadService.getAccountBalanceResponse> getAccountBalanceAsync(OPS.BehdadService.credential credential, OPS.BehdadService.accountInfo accountInfo) {
            OPS.BehdadService.getAccountBalance inValue = new OPS.BehdadService.getAccountBalance();
            inValue.credential = credential;
            inValue.accountInfo = accountInfo;
            return ((OPS.BehdadService.AccountService)(this)).getAccountBalanceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OPS.BehdadService.getPagedDestinationSideTransactionsResponse OPS.BehdadService.AccountService.getPagedDestinationSideTransactions(OPS.BehdadService.getPagedDestinationSideTransactions request) {
            return base.Channel.getPagedDestinationSideTransactions(request);
        }
        
        public OPS.BehdadService.pagedData getPagedDestinationSideTransactions(OPS.BehdadService.credential credential, OPS.BehdadService.sideTransactionsRequest sideTransactionsRequest, OPS.BehdadService.paging paging) {
            OPS.BehdadService.getPagedDestinationSideTransactions inValue = new OPS.BehdadService.getPagedDestinationSideTransactions();
            inValue.credential = credential;
            inValue.sideTransactionsRequest = sideTransactionsRequest;
            inValue.paging = paging;
            OPS.BehdadService.getPagedDestinationSideTransactionsResponse retVal = ((OPS.BehdadService.AccountService)(this)).getPagedDestinationSideTransactions(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OPS.BehdadService.getPagedDestinationSideTransactionsResponse> OPS.BehdadService.AccountService.getPagedDestinationSideTransactionsAsync(OPS.BehdadService.getPagedDestinationSideTransactions request) {
            return base.Channel.getPagedDestinationSideTransactionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<OPS.BehdadService.getPagedDestinationSideTransactionsResponse> getPagedDestinationSideTransactionsAsync(OPS.BehdadService.credential credential, OPS.BehdadService.sideTransactionsRequest sideTransactionsRequest, OPS.BehdadService.paging paging) {
            OPS.BehdadService.getPagedDestinationSideTransactions inValue = new OPS.BehdadService.getPagedDestinationSideTransactions();
            inValue.credential = credential;
            inValue.sideTransactionsRequest = sideTransactionsRequest;
            inValue.paging = paging;
            return ((OPS.BehdadService.AccountService)(this)).getPagedDestinationSideTransactionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OPS.BehdadService.getBankTransactionsDetailsResponse OPS.BehdadService.AccountService.getBankTransactionsDetails(OPS.BehdadService.getBankTransactionsDetails request) {
            return base.Channel.getBankTransactionsDetails(request);
        }
        
        public OPS.BehdadService.pagedData getBankTransactionsDetails(OPS.BehdadService.credential credential, OPS.BehdadService.accountTransactionFilter filter, OPS.BehdadService.paging paging) {
            OPS.BehdadService.getBankTransactionsDetails inValue = new OPS.BehdadService.getBankTransactionsDetails();
            inValue.credential = credential;
            inValue.filter = filter;
            inValue.paging = paging;
            OPS.BehdadService.getBankTransactionsDetailsResponse retVal = ((OPS.BehdadService.AccountService)(this)).getBankTransactionsDetails(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OPS.BehdadService.getBankTransactionsDetailsResponse> OPS.BehdadService.AccountService.getBankTransactionsDetailsAsync(OPS.BehdadService.getBankTransactionsDetails request) {
            return base.Channel.getBankTransactionsDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<OPS.BehdadService.getBankTransactionsDetailsResponse> getBankTransactionsDetailsAsync(OPS.BehdadService.credential credential, OPS.BehdadService.accountTransactionFilter filter, OPS.BehdadService.paging paging) {
            OPS.BehdadService.getBankTransactionsDetails inValue = new OPS.BehdadService.getBankTransactionsDetails();
            inValue.credential = credential;
            inValue.filter = filter;
            inValue.paging = paging;
            return ((OPS.BehdadService.AccountService)(this)).getBankTransactionsDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OPS.BehdadService.getPagedSourceSideTransactionsResponse OPS.BehdadService.AccountService.getPagedSourceSideTransactions(OPS.BehdadService.getPagedSourceSideTransactions request) {
            return base.Channel.getPagedSourceSideTransactions(request);
        }
        
        public OPS.BehdadService.pagedData getPagedSourceSideTransactions(OPS.BehdadService.credential credential, OPS.BehdadService.sideTransactionsRequest sideTransactionsRequest, OPS.BehdadService.paging paging) {
            OPS.BehdadService.getPagedSourceSideTransactions inValue = new OPS.BehdadService.getPagedSourceSideTransactions();
            inValue.credential = credential;
            inValue.sideTransactionsRequest = sideTransactionsRequest;
            inValue.paging = paging;
            OPS.BehdadService.getPagedSourceSideTransactionsResponse retVal = ((OPS.BehdadService.AccountService)(this)).getPagedSourceSideTransactions(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OPS.BehdadService.getPagedSourceSideTransactionsResponse> OPS.BehdadService.AccountService.getPagedSourceSideTransactionsAsync(OPS.BehdadService.getPagedSourceSideTransactions request) {
            return base.Channel.getPagedSourceSideTransactionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<OPS.BehdadService.getPagedSourceSideTransactionsResponse> getPagedSourceSideTransactionsAsync(OPS.BehdadService.credential credential, OPS.BehdadService.sideTransactionsRequest sideTransactionsRequest, OPS.BehdadService.paging paging) {
            OPS.BehdadService.getPagedSourceSideTransactions inValue = new OPS.BehdadService.getPagedSourceSideTransactions();
            inValue.credential = credential;
            inValue.sideTransactionsRequest = sideTransactionsRequest;
            inValue.paging = paging;
            return ((OPS.BehdadService.AccountService)(this)).getPagedSourceSideTransactionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OPS.BehdadService.getAccountControlTypeResponse OPS.BehdadService.AccountService.getAccountControlType(OPS.BehdadService.getAccountControlType request) {
            return base.Channel.getAccountControlType(request);
        }
        
        public string getAccountControlType(OPS.BehdadService.credential credential, OPS.BehdadService.accountInfo accountInfo, string identifierType) {
            OPS.BehdadService.getAccountControlType inValue = new OPS.BehdadService.getAccountControlType();
            inValue.credential = credential;
            inValue.accountInfo = accountInfo;
            inValue.identifierType = identifierType;
            OPS.BehdadService.getAccountControlTypeResponse retVal = ((OPS.BehdadService.AccountService)(this)).getAccountControlType(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OPS.BehdadService.getAccountControlTypeResponse> OPS.BehdadService.AccountService.getAccountControlTypeAsync(OPS.BehdadService.getAccountControlType request) {
            return base.Channel.getAccountControlTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<OPS.BehdadService.getAccountControlTypeResponse> getAccountControlTypeAsync(OPS.BehdadService.credential credential, OPS.BehdadService.accountInfo accountInfo, string identifierType) {
            OPS.BehdadService.getAccountControlType inValue = new OPS.BehdadService.getAccountControlType();
            inValue.credential = credential;
            inValue.accountInfo = accountInfo;
            inValue.identifierType = identifierType;
            return ((OPS.BehdadService.AccountService)(this)).getAccountControlTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OPS.BehdadService.getMultipleAccountTransactionsDetailsResponse OPS.BehdadService.AccountService.getMultipleAccountTransactionsDetails(OPS.BehdadService.getMultipleAccountTransactionsDetails request) {
            return base.Channel.getMultipleAccountTransactionsDetails(request);
        }
        
        public OPS.BehdadService.pagedData getMultipleAccountTransactionsDetails(OPS.BehdadService.credential credential, OPS.BehdadService.multipleAccountTransactionFilter filter, OPS.BehdadService.paging paging) {
            OPS.BehdadService.getMultipleAccountTransactionsDetails inValue = new OPS.BehdadService.getMultipleAccountTransactionsDetails();
            inValue.credential = credential;
            inValue.filter = filter;
            inValue.paging = paging;
            OPS.BehdadService.getMultipleAccountTransactionsDetailsResponse retVal = ((OPS.BehdadService.AccountService)(this)).getMultipleAccountTransactionsDetails(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OPS.BehdadService.getMultipleAccountTransactionsDetailsResponse> OPS.BehdadService.AccountService.getMultipleAccountTransactionsDetailsAsync(OPS.BehdadService.getMultipleAccountTransactionsDetails request) {
            return base.Channel.getMultipleAccountTransactionsDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<OPS.BehdadService.getMultipleAccountTransactionsDetailsResponse> getMultipleAccountTransactionsDetailsAsync(OPS.BehdadService.credential credential, OPS.BehdadService.multipleAccountTransactionFilter filter, OPS.BehdadService.paging paging) {
            OPS.BehdadService.getMultipleAccountTransactionsDetails inValue = new OPS.BehdadService.getMultipleAccountTransactionsDetails();
            inValue.credential = credential;
            inValue.filter = filter;
            inValue.paging = paging;
            return ((OPS.BehdadService.AccountService)(this)).getMultipleAccountTransactionsDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OPS.BehdadService.clearAccountControlTypeResponse OPS.BehdadService.AccountService.clearAccountControlType(OPS.BehdadService.clearAccountControlType request) {
            return base.Channel.clearAccountControlType(request);
        }
        
        public void clearAccountControlType(OPS.BehdadService.credential credential, OPS.BehdadService.accountInfo accountInfo, string identifierType) {
            OPS.BehdadService.clearAccountControlType inValue = new OPS.BehdadService.clearAccountControlType();
            inValue.credential = credential;
            inValue.accountInfo = accountInfo;
            inValue.identifierType = identifierType;
            OPS.BehdadService.clearAccountControlTypeResponse retVal = ((OPS.BehdadService.AccountService)(this)).clearAccountControlType(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OPS.BehdadService.clearAccountControlTypeResponse> OPS.BehdadService.AccountService.clearAccountControlTypeAsync(OPS.BehdadService.clearAccountControlType request) {
            return base.Channel.clearAccountControlTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<OPS.BehdadService.clearAccountControlTypeResponse> clearAccountControlTypeAsync(OPS.BehdadService.credential credential, OPS.BehdadService.accountInfo accountInfo, string identifierType) {
            OPS.BehdadService.clearAccountControlType inValue = new OPS.BehdadService.clearAccountControlType();
            inValue.credential = credential;
            inValue.accountInfo = accountInfo;
            inValue.identifierType = identifierType;
            return ((OPS.BehdadService.AccountService)(this)).clearAccountControlTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OPS.BehdadService.getAccountNumbersResponse OPS.BehdadService.AccountService.getAccountNumbers(OPS.BehdadService.getAccountNumbers request) {
            return base.Channel.getAccountNumbers(request);
        }
        
        public OPS.BehdadService.accountInfo[] getAccountNumbers(OPS.BehdadService.credential credential) {
            OPS.BehdadService.getAccountNumbers inValue = new OPS.BehdadService.getAccountNumbers();
            inValue.credential = credential;
            OPS.BehdadService.getAccountNumbersResponse retVal = ((OPS.BehdadService.AccountService)(this)).getAccountNumbers(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OPS.BehdadService.getAccountNumbersResponse> OPS.BehdadService.AccountService.getAccountNumbersAsync(OPS.BehdadService.getAccountNumbers request) {
            return base.Channel.getAccountNumbersAsync(request);
        }
        
        public System.Threading.Tasks.Task<OPS.BehdadService.getAccountNumbersResponse> getAccountNumbersAsync(OPS.BehdadService.credential credential) {
            OPS.BehdadService.getAccountNumbers inValue = new OPS.BehdadService.getAccountNumbers();
            inValue.credential = credential;
            return ((OPS.BehdadService.AccountService)(this)).getAccountNumbersAsync(inValue);
        }
    }
}
