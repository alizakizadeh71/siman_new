@model ViewModels.Areas.Administrator.HeadOfFactor.CreateViewModel
@{
    string strTitle =
        string.Format("{0} {1}",
        Resources.Action.Create,
        Resources.Model.HeadOfFactor.EntitiesName);
}

@using (Html.BeginForm("Create", "HeadOfFactor", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    if (ViewBag.PageMessages != null && ViewBag.PageMessages != string.Empty)
    {
        <div class="panel panel-info">
            <div class="panel-heading">
                پیام های سیستمی
            </div>
            <div class="panel-body">
                @Html.Raw(ViewBag.PageMessages)
            </div>
        </div>
    }
    
    <div class="panel panel-primary">
        <div class="panel-heading">
            @strTitle
        </div>
        <div class="panel-body">

            <div class="form-group">
                @Html.LabelFor(model => model.HeadLine, new { @class = "col-md-2 control-label" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.HeadLine, null,
                    Resources.Caption.SelectAnItem, new { @class = "form-control", @onchange = "onChangeHeadLine()" })
                    @Html.ValidationMessageFor(model => model.HeadLine)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SubHeadLine, new { @class = "col-md-2 control-label" })
                <div class="col-md-6" id="DivSubHeadLineId">
                    @Html.DropDownListFor(model => model.SubHeadLine, null, Resources.Caption.SelectAnItem, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SubHeadLine)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Province, new { @class = "col-md-2 control-label" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.Province, null,
                    Resources.Caption.SelectAnItem, new { @class = "form-control", @onchange = "onChangeProvince()" })
                    @Html.ValidationMessageFor(model => model.Province)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, new { @class = "col-md-2 control-label" })
                <div class="col-md-6" id="DivCityId">
                    @Html.DropDownListFor(model => model.City, null, Resources.Caption.SelectAnItem, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.City)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CompanyName, new { @class = "col-md-2 control-label" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.CompanyName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CompanyNationalCode, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.CompanyNationalCode, new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.CompanyNationalCode)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CellPhoneNumber, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.CellPhoneNumber, new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.CellPhoneNumber)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Description, new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10 col-md-offset-2">
                    <input type="submit" value="@Resources.Buttons.Create" class="btn btn-primary" />
                    <input type="submit" value="@Resources.Buttons.Reset" class="btn btn-primary" />
                </div>
            </div>

        </div>

        <div class="panel-footer">
            @Html.ActionLink(Resources.Action.BackToList, MVC.Administrator.HeadOfFactor.Index(), new { @class = "btn btn-default col-md-2" })

            <a class="btn btn-default col-md-2" data-toggle="tooltip" data-placement="top" title="@(Resources.Action.BackToMain)" style="float:left;"
               href="/HomeMain/Main/"><span style="float:right;">@Resources.Action.BackToMain</span><img style="float:left;" src='../../../Content/Icon/Back.png' /></a>
            <br />
            <br />
        </div>
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
        $('select>option:eq(1)').prop('selected', true);
        onChangeHeadLine();
    });
    function onChangeProvince() {
        $.ajax({
            url: '/Administrator/HeadOfFactor/GetCities',
            type: 'post',
            data: { provinceId: $("#Province").val() },
            success: function (data) {

                $("#DivCityId").empty();

                var select = $("<select class='form-control' id='City' name='City' data-rel='chosen'>");
                var option1 = "<option value='@System.Guid.Empty'>" + "از لیست انتخاب نمایید" + "</option>";
                select.append(option1);

                $.each(data, function (i, city) {
                    var option=('<option value="' + city.Id + '"> ' + city.Name + '</option>');
                    select.append(option);
                })

                $("#DivCityId").append(select);
            }
        });
    }


    function onChangeHeadLine() {
        $.ajax({
            url: '/Administrator/CementController/GetSubHeadLines',
            type: 'post',
            data: { HeadLineId: $("#HeadLine").val() },
            success: function (data) {

                $("#DivSubHeadLineId").empty();

                var select = $("<select class='form-control' id='SubHeadLine' name='SubHeadLine' data-rel='chosen'>");
                var option1 = "<option value='@System.Guid.Empty'>" + "از لیست انتخاب نمایید" + "</option>";
                select.append(option1);

                $.each(data, function (i, subHeadLine) {
                    var option = ('<option value="' + subHeadLine.Id + '"> ' + subHeadLine.Name + '</option>');
                    select.append(option);
                })

                $("#DivSubHeadLineId").append(select);
                // baraye az ghabl entekhab shodane item
                $('#SubHeadLine>option:eq(1)').prop('selected', true);
            }
        });
    }

</script>