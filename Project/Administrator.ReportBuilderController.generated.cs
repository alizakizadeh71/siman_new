// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace OPS.Areas.Administrator.Controllers
{
    public partial class ReportBuilderController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ReportBuilderController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ReportBuilderController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetParamReport()
        {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetParamReport);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexDataReport()
        {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexDataReport);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult ExportToExcel()
        {
            return new T4MVC_JsonResult(Area, Name, ActionNames.ExportToExcel);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ReportBuilderController Actions { get { return MVC.Administrator.ReportBuilder; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Administrator";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "ReportBuilder";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "ReportBuilder";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string GetParamReport = "GetParamReport";
            public readonly string IndexDataReport = "IndexDataReport";
            public readonly string GetDataReports = "GetDataReports";
            public readonly string DownloadReportFile = "DownloadReportFile";
            public readonly string ExportToExcel = "ExportToExcel";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string GetParamReport = "GetParamReport";
            public const string IndexDataReport = "IndexDataReport";
            public const string GetDataReports = "GetDataReports";
            public const string DownloadReportFile = "DownloadReportFile";
            public const string ExportToExcel = "ExportToExcel";
        }


        static readonly ActionParamsClass_GetParamReport s_params_GetParamReport = new ActionParamsClass_GetParamReport();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetParamReport GetParamReportParams { get { return s_params_GetParamReport; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetParamReport
        {
            public readonly string reportId = "reportId";
        }
        static readonly ActionParamsClass_IndexDataReport s_params_IndexDataReport = new ActionParamsClass_IndexDataReport();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_IndexDataReport IndexDataReportParams { get { return s_params_IndexDataReport; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_IndexDataReport
        {
            public readonly string reportId = "reportId";
            public readonly string formCollection = "formCollection";
        }
        static readonly ActionParamsClass_GetDataReports s_params_GetDataReports = new ActionParamsClass_GetDataReports();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDataReports GetDataReportsParams { get { return s_params_GetDataReports; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDataReports
        {
            public readonly string reportId = "reportId";
            public readonly string formCollection = "formCollection";
            public readonly string totalPage = "totalPage";
        }
        static readonly ActionParamsClass_ExportToExcel s_params_ExportToExcel = new ActionParamsClass_ExportToExcel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExportToExcel ExportToExcelParams { get { return s_params_ExportToExcel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExportToExcel
        {
            public readonly string reportId = "reportId";
            public readonly string formCollection = "formCollection";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string ExportToExcel = "ExportToExcel";
                public readonly string GetParamReport = "GetParamReport";
                public readonly string Index = "Index";
                public readonly string IndexDataReport = "IndexDataReport";
            }
            public readonly string ExportToExcel = "~/Areas/Administrator/Views/ReportBuilder/ExportToExcel.cshtml";
            public readonly string GetParamReport = "~/Areas/Administrator/Views/ReportBuilder/GetParamReport.cshtml";
            public readonly string Index = "~/Areas/Administrator/Views/ReportBuilder/Index.cshtml";
            public readonly string IndexDataReport = "~/Areas/Administrator/Views/ReportBuilder/IndexDataReport.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ReportBuilderController : OPS.Areas.Administrator.Controllers.ReportBuilderController
    {
        public T4MVC_ReportBuilderController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetParamReport(System.Guid reportId)
        {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetParamReport);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "reportId", reportId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexDataReport(System.Guid reportId, System.Web.Mvc.FormCollection formCollection)
        {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexDataReport);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "reportId", reportId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "formCollection", formCollection);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetDataReports(System.Guid reportId, System.Web.Mvc.FormCollection formCollection, int totalPage)
        {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetDataReports);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "reportId", reportId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "formCollection", formCollection);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "totalPage", totalPage);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetDataReports()
        {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetDataReports);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DownloadReportFile()
        {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DownloadReportFile);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult ExportToExcel(System.Guid reportId, System.Web.Mvc.FormCollection formCollection)
        {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.ExportToExcel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "reportId", reportId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "formCollection", formCollection);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
